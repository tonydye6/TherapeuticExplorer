import React, { useState } from 'react';
import { useQuery } from '@tanstack/react-query';
import { apiRequest } from '@/lib/queryClient';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Skeleton } from "@/components/ui/skeleton";
import { ScrollArea } from "@/components/ui/scroll-area";
import { SearchIcon, FilterIcon, HeartIcon, BookmarkIcon, ThumbsUpIcon, MessageSquareIcon } from 'lucide-react';

interface SurvivorStoriesPageProps {
  inTabView?: boolean;
}

// Sample categories for stories
const CATEGORIES = [
  "All Stories",
  "Newly Diagnosed",
  "In Treatment",
  "Post-Treatment",
  "Caregivers",
  "Long-Term Survivors",
  "Clinical Trials",
  "Alternative Therapies"
];

// Sample tags for filtering
const TAGS = [
  "Esophageal Cancer",
  "Chemotherapy",
  "Radiation",
  "Surgery",
  "Nutrition",
  "Mindfulness",
  "Hope",
  "Family Support",
  "Side Effects",
  "Recovery"
];

// Sample data structure for stories
interface Story {
  id: number;
  title: string;
  content: string;
  authorName: string;
  authorAvatar?: string;
  datePosted: string;
  category: string;
  tags: string[];
  featured?: boolean;
  likesCount: number;
  commentsCount: number;
  journey?: {
    diagnosisDate: string;
    stage: string;
    treatments: string[];
    currentStatus: string;
  };
}

// Sample featured stories
const FEATURED_STORIES: Story[] = [
  {
    id: 1,
    title: "Finding Strength in Unexpected Places",
    content: "When I was diagnosed with esophageal cancer last year, I never imagined the journey would transform me in so many ways. Through the challenges of treatment, I discovered inner resources I never knew I had. The support from my healthcare team and loved ones made all the difference. Today, I'm recovering well and appreciating each day in a new way.",
    authorName: "Sarah J.",
    datePosted: "2025-01-15",
    category: "Post-Treatment",
    tags: ["Esophageal Cancer", "Recovery", "Hope"],
    featured: true,
    likesCount: 42,
    commentsCount: 7,
    journey: {
      diagnosisDate: "2024-01-10",
      stage: "Stage 2",
      treatments: ["Surgery", "Chemotherapy"],
      currentStatus: "In remission"
    }
  },
  {
    id: 2,
    title: "Supporting My Partner Through Treatment",
    content: "As a caregiver to my husband during his esophageal cancer journey, I learned the importance of self-care alongside patient care. Finding a community of other caregivers provided essential support and practical advice that helped us navigate the medical system more effectively. I'm sharing our story to help others feel less alone in this challenging role.",
    authorName: "Michael T.",
    datePosted: "2025-02-03",
    category: "Caregivers",
    tags: ["Family Support", "Caregiving", "Esophageal Cancer"],
    featured: true,
    likesCount: 38,
    commentsCount: 12
  },
  {
    id: 3,
    title: "My Clinical Trial Experience",
    content: "Participating in a clinical trial for advanced esophageal cancer gave me access to innovative treatment when standard approaches weren't working. The process was different than I expected - more structured, with excellent care and monitoring. While there were challenges, I'm grateful for the opportunity and want to share what I learned about navigating clinical trials.",
    authorName: "Robert K.",
    datePosted: "2025-03-10",
    category: "Clinical Trials",
    tags: ["Clinical Trials", "Advanced Cancer", "Treatment Options"],
    featured: true,
    likesCount: 29,
    commentsCount: 8,
    journey: {
      diagnosisDate: "2023-09-12",
      stage: "Stage 3",
      treatments: ["Chemotherapy", "Immunotherapy Trial"],
      currentStatus: "Stable disease"
    }
  }
];

// Sample recent stories
const RECENT_STORIES: Story[] = [
  {
    id: 4,
    title: "Nutrition After Esophagectomy",
    content: "Managing nutrition after my esophagectomy was one of my biggest challenges. I'm sharing what worked for me and the resources that helped.",
    authorName: "Lisa M.",
    datePosted: "2025-04-02",
    category: "Post-Treatment",
    tags: ["Nutrition", "Surgery", "Recovery"],
    likesCount: 23,
    commentsCount: 5
  },
  {
    id: 5,
    title: "Mindfulness Practices During Chemo",
    content: "These mindfulness techniques helped me cope with anxiety and side effects during my chemotherapy treatment.",
    authorName: "David W.",
    datePosted: "2025-03-28",
    category: "In Treatment",
    tags: ["Chemotherapy", "Mindfulness", "Side Effects"],
    likesCount: 18,
    commentsCount: 3
  },
  {
    id: 6,
    title: "Five Years Cancer-Free",
    content: "Reflecting on my five-year milestone and how my perspective on life has changed since my diagnosis.",
    authorName: "Jennifer P.",
    datePosted: "2025-03-25",
    category: "Long-Term Survivors",
    tags: ["Hope", "Recovery", "Survivorship"],
    likesCount: 45,
    commentsCount: 9
  },
  {
    id: 7,
    title: "First Steps After Diagnosis",
    content: "Recently diagnosed and sharing what I've learned about gathering information, finding the right care team, and preparing for treatment.",
    authorName: "Thomas H.",
    datePosted: "2025-03-22",
    category: "Newly Diagnosed",
    tags: ["Newly Diagnosed", "Esophageal Cancer"],
    likesCount: 12,
    commentsCount: 6
  }
];

// Combined stories
const ALL_STORIES = [...FEATURED_STORIES, ...RECENT_STORIES];

const StoryCard = ({ story }: { story: Story }) => {
  return (
    <Card className="h-full flex flex-col hover:shadow-lg transition-all duration-200 border-sophera-border-soft rounded-sophera-card bg-sophera-bg-card overflow-hidden">
      <CardHeader className="pb-2 pt-5 px-5">
        <div className="flex justify-between items-start">
          <CardTitle className="text-xl font-semibold line-clamp-2 text-sophera-text-heading">{story.title}</CardTitle>
          {story.featured && (
            <Badge variant="secondary" className="bg-sophera-accent-primary/15 text-sophera-accent-primary border-none">
              Featured
            </Badge>
          )}
        </div>
        <CardDescription className="flex items-center gap-2 pt-1.5">
          <Avatar className="h-7 w-7 border border-sophera-border-soft">
            <AvatarImage src={story.authorAvatar} />
            <AvatarFallback className="bg-sophera-gradient-start text-sophera-brand-primary font-medium">{story.authorName.charAt(0)}</AvatarFallback>
          </Avatar>
          <span className="text-sm text-sophera-text-subtle">{story.authorName} Â· {new Date(story.datePosted).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' })}</span>
        </CardDescription>
      </CardHeader>
      <CardContent className="flex-grow px-5">
        <p className="text-base line-clamp-4 text-sophera-text-body">{story.content}</p>
        <div className="flex flex-wrap gap-1.5 mt-4">
          {story.tags.slice(0, 3).map(tag => (
            <Badge key={tag} className="text-xs px-2.5 py-1 bg-sophera-bg-secondary text-sophera-text-body border-sophera-border-soft rounded-full">
              {tag}
            </Badge>
          ))}
          {story.tags.length > 3 && <span className="text-xs text-sophera-text-subtle">+{story.tags.length - 3} more</span>}
        </div>
      </CardContent>
      <CardFooter className="pt-3 border-t border-sophera-border-soft flex justify-between items-center text-sm text-sophera-text-subtle px-5 py-4">
        <div className="flex items-center gap-5">
          <span className="flex items-center gap-1.5">
            <ThumbsUpIcon className="h-4 w-4 text-sophera-accent-tertiary" />
            {story.likesCount}
          </span>
          <span className="flex items-center gap-1.5">
            <MessageSquareIcon className="h-4 w-4 text-sophera-accent-secondary" />
            {story.commentsCount}
          </span>
        </div>
        <div className="flex gap-3">
          <Button variant="ghost" size="icon" className="h-8 w-8 rounded-full hover:bg-sophera-accent-tertiary/10 hover:text-sophera-accent-tertiary">
            <BookmarkIcon className="h-4 w-4" />
          </Button>
          <Button variant="ghost" size="icon" className="h-8 w-8 rounded-full hover:bg-sophera-accent-primary/10 hover:text-sophera-accent-primary">
            <HeartIcon className="h-4 w-4" />
          </Button>
        </div>
      </CardFooter>
    </Card>
  );
};

export default function SurvivorStoriesPage({ inTabView }: SurvivorStoriesPageProps) {
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('All Stories');
  const [selectedTag, setSelectedTag] = useState('All');
  
  // In a real implementation, this would fetch from the backend
  const { data: stories, isLoading } = useQuery({
    queryKey: ["/api/survivor-stories"],
    // This is a placeholder since we're using static data
    queryFn: async () => {
      // Simulate API call
      await new Promise(resolve => setTimeout(resolve, 1000));
      return ALL_STORIES;
    },
    refetchOnWindowFocus: false,
  });

  // Filter stories based on search term, category, and tags
  const filteredStories = stories?.filter(story => {
    const matchesSearch = searchTerm
      ? story.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
        story.content.toLowerCase().includes(searchTerm.toLowerCase()) ||
        story.authorName.toLowerCase().includes(searchTerm.toLowerCase())
      : true;
    
    const matchesCategory = selectedCategory === 'All Stories'
      ? true
      : story.category === selectedCategory;
    
    const matchesTags = selectedTag === 'All'
      ? true
      : story.tags.includes(selectedTag);
    
    return matchesSearch && matchesCategory && matchesTags;
  });

  // Get featured stories
  const featuredStories = filteredStories?.filter(story => story.featured);